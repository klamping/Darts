// Generated by CoffeeScript 1.3.3
(function() {
  var Backbone, Game, GameList, Match, root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  if (!(typeof Meteor !== "undefined" && Meteor !== null)) {
    Backbone = require('backbone');
    Game = require('./Game').Game;
  }

  GameList = (function(_super) {

    __extends(GameList, _super);

    function GameList() {
      return GameList.__super__.constructor.apply(this, arguments);
    }

    GameList.prototype.model = Game;

    GameList.prototype.comparator = function(game) {
      return -1 * game.get('score');
    };

    return GameList;

  })(Backbone.Collection);

  Match = (function(_super) {

    __extends(Match, _super);

    function Match() {
      return Match.__super__.constructor.apply(this, arguments);
    }

    Match.prototype.initialize = function() {
      this.games = new GameList;
      this.games.on('all', function() {
        return this.updateLeaderboard();
      }, this);
      this.games.add(this.get('g1'));
      return this.games.add(this.get('g2'));
    };

    Match.prototype.updateLeaderboard = function() {
      return this.set('leaderBoard', this.games.pluck('player'));
      /*
      		if (@get('g1').get('finished') && @get('g2').get('finished'))
      			console.log @get('leaderBoard')[0]
      			record = @get('g1').get('player').get('record')
      */

    };

    return Match;

  })(Backbone.Model);

  root.Match = Match;

}).call(this);
